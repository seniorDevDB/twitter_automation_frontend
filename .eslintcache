[{"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\index.js":"1","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\DmInbox.js":"2","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\Socket.js":"3","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Login.js":"4","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Navbar.js":"5","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\UserFunction.js":"6","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Dashboard.js":"7","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\DashboardFunction.js":"8","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\actions\\actions.js":"9","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\reducers\\index.js":"10","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\store.js":"11","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Report.js":"12","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\CommentInbox.js":"13","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\history.js":"14"},{"size":624,"mtime":1611778182715,"results":"15","hashOfConfig":"16"},{"size":7936,"mtime":1615561549013,"results":"17","hashOfConfig":"16"},{"size":631,"mtime":1615302040868,"results":"18","hashOfConfig":"16"},{"size":4435,"mtime":1615303352297,"results":"19","hashOfConfig":"16"},{"size":8448,"mtime":1615562415439,"results":"20","hashOfConfig":"16"},{"size":668,"mtime":1615303669555,"results":"21","hashOfConfig":"16"},{"size":9802,"mtime":1615522614661,"results":"22","hashOfConfig":"16"},{"size":7135,"mtime":1615423158889,"results":"23","hashOfConfig":"16"},{"size":1698,"mtime":1615309251233,"results":"24","hashOfConfig":"16"},{"size":2605,"mtime":1615314037000,"results":"25","hashOfConfig":"16"},{"size":591,"mtime":1615314011544,"results":"26","hashOfConfig":"16"},{"size":7623,"mtime":1615522777140,"results":"27","hashOfConfig":"16"},{"size":9086,"mtime":1615564625507,"results":"28","hashOfConfig":"16"},{"size":389,"mtime":1612472598739,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12rukaq",{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\index.js",[],["62","63"],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\DmInbox.js",["64","65","66","67","68","69","70"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport MaterialTable, { Column, MTableBodyRow } from \"material-table\";\r\n\r\nimport './style.css'\r\n\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport View from \"@material-ui/icons/Visibility\";\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { startBot, endBot, getAllData, updateIsMarkedDm } from \"./../api/DashboardFunction\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nclass DmInbox extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hoveringOver: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getAllData();\r\n    }\r\n\r\n    handleRowHover = (event, propsData) => {\r\n        this.setState({hoveringOver: propsData.index});\r\n    }\r\n\r\n    handleRowHoverLeave = (event, propsData) => {\r\n        this.setState({hoveringOver: \"\"});\r\n    }\r\n\r\n    isMarkAsRead = (row) => {\r\n        return row.mark_as_read == false;\r\n    }\r\n\r\n    handleDisplayMessage = (event, data) => {\r\n        console.log(\"I am dat!!\", data);\r\n        // udpate is marked\r\n        const info = {\r\n            account_username: data.account_username,\r\n            username: data.username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            coming_time: data.coming_time,\r\n            content: data.content\r\n        }\r\n        updateIsMarkedDm(info).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n        \r\n        //save the link into localstorage\r\n        localStorage.setItem('dm_link', data.link)\r\n        this.props.history.push(`/message/${data.username}/${data.bot_number}/${data.profile}`)\r\n    }\r\n\r\n    dateCompare = (firstDate, secondDate) => {\r\n        const date1 = new Date(firstDate);\r\n        const date2 = new Date(secondDate);\r\n\r\n        if (date1 > date2)\r\n            return -1;\r\n\r\n        if (date1 < date2)\r\n            return 1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"ok\",this.props.new_message)\r\n        const new_message = this.props.new_message;\r\n        const { hoveringOver } = this.state;\r\n        let filtered_message = new_message.filter((item) => item.bot_number === this.props.bot_number)\r\n\r\n        if (filtered_message) {\r\n            filtered_message.sort((a,b) => this.dateCompare(a.save_time, b.save_time))\r\n\r\n            for (var i = 0 ; i < filtered_message.length; i ++) {\r\n                const save_time = new Date(filtered_message[i].save_time);\r\n                console.log(\"I am tim!!!\", save_time);\r\n                filtered_message[i].save_time = save_time.toLocaleString('default', { month: 'short', day: 'numeric' })\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className=\"table\">\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    columns={[\r\n                        { title: \"Username\", field: \"username\" },\r\n                        { title: \"Coming Message Time\", field: \"coming_time\"},\r\n                        { title: \"Message Content\", field: \"content\"},\r\n                        { title: \"Save Time\", field: \"save_time\"},\r\n                        { title: \"Bot Number\", field: \"bot_number\"},\r\n                        { title: \"Browser Number\", field: \"profile\" },\r\n                        { title: \"ID\", field: \"_id\" },\r\n                    ]}\r\n                    data={filtered_message}\r\n                    options={{\r\n                        // paging: false,\r\n                        // toolbar: false,\r\n                        pageSizeOptions: [10, 25, 50],\r\n                        pageSize: 10,\r\n                        headerStyle: {\r\n                          backgroundColor: \"#378FC3\",\r\n                          color: \"#FFF\",\r\n                          fontSize: \"17px\",\r\n                          fontWeight: \"bold\"\r\n                        },\r\n                        rowStyle: rowData => ({\r\n                            backgroundColor: this.isMarkAsRead(rowData) ? \"rgba(255,255,255,0.902)\" : \"rgba(242,245,245,0.8)\",\r\n                            fontWeight: this.isMarkAsRead(rowData) ? \"bold\" : \"\",\r\n                            boxShadow: rowData.tableData.id === hoveringOver ? 'inset 1px 0 0 #dadce0, inset -1px 0 0 #dadce0, 0 1px 2px 0 rgb(60 64 67 / 30%), 0 1px 3px 1px rgb(60 64 67 / 15%)' : ''\r\n                        }),\r\n                        tableLayout: \"fixed\"\r\n                    }}\r\n                    title=\"\"\r\n                    components={{\r\n                        Row: props => {\r\n                            return (\r\n                            <MTableBodyRow\r\n                                {...props}\r\n                                onMouseEnter={e => this.handleRowHover(e, props)}\r\n                                onMouseLeave={e => this.handleRowHoverLeave(e, props)}\r\n                            />\r\n                            );\r\n                        }\r\n                    }}\r\n                    onRowClick = {this.handleDisplayMessage}\r\n                    // actions={[\r\n                    //     {\r\n                    //     icon: View,\r\n                    //     tooltip: \"View\",\r\n                    //     onClick: (event, rowData) =>\r\n                    //         {this.handleDisplayComment(rowData)}\r\n                    //     }\r\n                    // ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    new_message: state.data.new_message,\r\n    bot_number: state.bot\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getAllData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DmInbox)","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\Socket.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Login.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Navbar.js",["71","72","73","74","75","76","77"],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\UserFunction.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Dashboard.js",["78","79","80","81","82","83","84"],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\DashboardFunction.js",["85","86","87","88","89"],"import axios from \"axios\";\r\nimport { fetchDataFailed, fetchDataPending, fetchDataSuccess, fetchMessageData, fetchCommentData, commentNotify, dmNotify, sendMsgSuccess,sendCommentSuccess,setSelectedBot } from \"./../store/actions/actions\";\r\nimport history from \"./../history\"\r\nconst axiosInstance = axios.create({baseURL: \"http://localhost:5000\"})\r\n\r\nexport function getAllData() {\r\n    return dispatch => {\r\n        dispatch(fetchDataPending());\r\n        axiosInstance.post(\"/fetch_all_data\").then(res => {\r\n            console.log(\"here is data\", res)\r\n            dispatch(fetchDataSuccess(res.data));\r\n        }).catch(err => {\r\n            console.error(err);\r\n            dispatch(fetchDataFailed());\r\n        })\r\n    }\r\n}\r\n\r\n// export function getReport(data) {\r\n//     return dispatch => {\r\n//         axiosInstance.post(\"/getReport\", {\r\n//             bot_number: data\r\n//         }).then((res) => {\r\n//             console.log(\"here is response\", res)\r\n\r\n//         })\r\n//         .catch((err) => {\r\n//             console.log(err);\r\n//         });\r\n//     }\r\n// }\r\n\r\nexport const startBot = (data) => {\r\n    console.log(\"start bot\")\r\n    return axiosInstance\r\n        .post(\"/start_bot\", {\r\n            bot_msg1: data.bot_msg1,\r\n            bot_msg2: data.bot_msg2,\r\n            bot_comment_msg: data.bot_comment_msg,\r\n            lead_number: data.username_num,\r\n            bot_number:data.bot_number,\r\n            status: data.status\r\n        })\r\n        .then((res) => {\r\n            console.log(\"DATA FROM BACK\", res.data);\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const endBot = (data) => {\r\n    console.log(\"end bot\")\r\n    return axiosInstance\r\n        .post(\"/end_bot\", {\r\n            status: data.status,\r\n            bot_number: data.bot_number\r\n        })\r\n        .then((res) => {\r\n            console.log(\"DATA FROM BACK\", res.data);\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const checkDM = (data) => {\r\n    return axiosInstance\r\n        .post(\"/check_dm\", {\r\n            bot_number: data\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const checkFollow = (data) => {\r\n    return axiosInstance\r\n        .post(\"/check_follow\", {\r\n            bot_number: data\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const checkComment = (data) => {\r\n    return axiosInstance\r\n        .post(\"/check_comment\", {\r\n            bot_number: data\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const displayComment = (data) => {\r\n    console.log(\"here is display comment fucntion\")\r\n    return dispatch => {\r\n        axiosInstance\r\n        .post(\"/display_comment\", {\r\n            username: data.username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            account_name: data.account_name\r\n        })\r\n        .then((res) => {\r\n            console.log(\"RESPONSE\", res.data)\r\n            dispatch(fetchCommentData(res.data));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n}\r\n\r\nexport const newComment = (data) => {\r\n    return dispatch => axiosInstance\r\n        .post(\"/new_comment\", {\r\n            content: data.content,\r\n            username: data.username,\r\n            account_name: data.account_name,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            previous_content: data.previous_content,\r\n            link: data.link\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            dispatch(sendCommentSuccess(data));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n\r\nexport const displayMsg = (data) => {\r\n    console.log(\"here is display masg fucntion\")\r\n    return dispatch => {\r\n        axiosInstance\r\n        .post(\"/display_msg\", {\r\n            username: data\r\n        })\r\n        .then((res) => {\r\n            console.log(\"RESPONSE\", res.data)\r\n            dispatch(fetchMessageData(res.data));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n}\r\n\r\nexport const newMsg = (data) => {\r\n    return dispatch => axiosInstance\r\n        .post(\"/new_msg\", {\r\n            content: data.content,\r\n            username: data.username,\r\n            link: data.link,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n        })\r\n        .then((res) => {\r\n            dispatch(sendMsgSuccess(data));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const checkNotification = () => {\r\n    console.log(\"checkNotification\")\r\n    return dispatch => axiosInstance\r\n        .post(\"check_notification\", {\r\n\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            if (res.data.message == \"dm\"){\r\n                dispatch(dmNotify(true));\r\n            }\r\n            else if (res.data.message == \"comment\"){\r\n                dispatch(commentNotify(true));\r\n            }\r\n            \r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const clearNotification = (data) => {\r\n    if (data == \"dm\") {\r\n        return dispatch => dispatch(dmNotify(false))\r\n    }\r\n    else if (data == \"comment\") {\r\n        return dispatch => dispatch(commentNotify(false))\r\n    }\r\n    \r\n}\r\n\r\nexport const setBot = (data) => {\r\n    return dispatch => dispatch(setSelectedBot(data))\r\n}\r\n\r\nexport const updateIsMarked = (data) => {\r\n    console.log(\"data\", data)\r\n    return axiosInstance\r\n        .post(\"/update_is_marked\", {\r\n            account_username: data.account_username,\r\n            to_username: data.to_username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            coming_time: data.coming_time,\r\n            content: data.content\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const updateIsMarkedDm = (data) => {\r\n    console.log(\"datadddd\", data)\r\n    return axiosInstance\r\n        .post(\"/update_is_marked_dm\", {\r\n            account_username: data.account_username,\r\n            username: data.username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            coming_time: data.coming_time,\r\n            content: data.content\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\actions\\actions.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\reducers\\index.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\store.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Report.js",["90","91","92","93","94","95"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport MaterialTable, { Column, MTableBodyRow, TablePagination } from \"material-table\";\r\n\r\nimport './style.css'\r\n\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport View from \"@material-ui/icons/Visibility\";\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { getAllData, updateIsMarked} from \"./../api/DashboardFunction\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nclass CommentInbox extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hoveringOver: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.getAllData();\r\n    }\r\n\r\n    downloadCSV(csv, filename) {\r\n        let csvFile;\r\n        let downloadLink;\r\n    \r\n        // CSV file\r\n        csvFile = new Blob([csv], {type: \"text/csv\"});\r\n    \r\n        // Download link\r\n        downloadLink = document.createElement(\"a\");\r\n    \r\n        // File name\r\n        downloadLink.download = filename;\r\n    \r\n        // Create a link to the file\r\n        downloadLink.href = window.URL.createObjectURL(csvFile);\r\n    \r\n        // Hide download link\r\n        downloadLink.style.display = \"none\";\r\n    \r\n        // Add the link to DOM\r\n        document.body.appendChild(downloadLink);\r\n    \r\n        // Click download link\r\n        downloadLink.click();\r\n    }\r\n\r\n    exportToCSV() {\r\n        let csv = [];\r\n        let titles = [\r\n            \"Bot Number\",\r\n            \"Number of Leads\",\r\n            \"Sent DM\",\r\n            \"Expired DM\",\r\n            \"Spintax1 Reply\",\r\n            \"Spintax2 Reply\",\r\n            \"Sent Comment\",\r\n            \"Expired Comment\",\r\n            \"Comment Reply\",\r\n            \"Follow\",\r\n            \"Follow Back\"\r\n        ];\r\n        csv.push(titles.join(\",\"));\r\n        for( let i = 0; i < this.props.report.length; i ++ ) {\r\n            let data = this.props.report[i];\r\n            let row = [data.bot_number, data.lead_number, data.sent_dm, data.expired_dm,data.spintax1_reply, data.spintax2_reply,data.comment, data.expired_comment,data.comment_reply, data.follow, data.follow_back];\r\n            csv.push(row.join(','));\r\n        }\r\n        this.downloadCSV(csv.join(\"\\n\"), \"report.csv\");\r\n    }\r\n\r\n    render() {\r\n        const report = this.props.report;\r\n        // this.exportToCSV();\r\n\r\n        return(\r\n            <div className=\"table\">\r\n                <MaterialTable\r\n                components={{\r\n                    Pagination: props => {\r\n                      return (\r\n                        <td>\r\n                          <table\r\n                            style={{\r\n                              position: 'fixed',\r\n                              bottom: 0,\r\n                              left: 0,\r\n                              width: '100%',\r\n                            }}\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <TablePagination {...props} />\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      );\r\n                    },\r\n                  }}\r\n                    icons={tableIcons}\r\n                    columns={[\r\n                        { title: \"Bot Number\", field: \"bot_number\", width: \"20%\" },\r\n                        { title: \"Number of Leads\", field: \"lead_number\", width: \"20%\" },\r\n                        { title: \"Sent DM\", field: \"sent_dm\"},\r\n                        { title: \"Expired DM\", field: \"expired_dm\"},\r\n                        { title: \"Spintax1 Reply\", field: \"spintax1_reply\"},\r\n                        { title: \"Spintax2 Reply\", field: \"spintax2_reply\"},\r\n                        { title: \"Sent Comment\", field: \"sent_comment\"},\r\n                        { title: \"Expired Comment\", field: \"expired_comment\"},\r\n                        { title: \"Comment Reply\", field: \"comment_reply\" },\r\n                        { title: \"Follow\", field: \"follow\"},\r\n                        { title: \"Follow Back\", field: \"follow_back\"}\r\n                    ]}\r\n                    data={report}\r\n                    options={{\r\n                        pageSizeOptions: [10, 25, 50],\r\n                        pageSize: 10,\r\n                        headerStyle: {\r\n                          backgroundColor: \"#378FC3\",\r\n                          color: \"#FFF\",\r\n                          fontSize: \"17px\",\r\n                          fontWeight: \"bold\"\r\n                        },\r\n                        tableLayout: \"fixed\"\r\n                    }}\r\n                    actions={[\r\n                        {\r\n                          icon: tableIcons.Export,\r\n                          tooltip: \"Export To CSV\",\r\n                          isFreeAction: true,\r\n                          onClick: () => {\r\n                            this.exportToCSV();\r\n                          }\r\n                        }\r\n                      ]}\r\n                    components={{\r\n                    }}\r\n                    title=\"Report\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    report: state.data.report,\r\n    bot_number: state.bot\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getAllData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentInbox)","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\CommentInbox.js",["96","97","98","99","100","101","102"],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\history.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":6,"column":25,"nodeType":"109","messageId":"110","endLine":6,"endColumn":31},{"ruleId":"107","severity":1,"message":"112","line":26,"column":8,"nodeType":"109","messageId":"110","endLine":26,"endColumn":12},{"ruleId":"107","severity":1,"message":"113","line":28,"column":10,"nodeType":"109","messageId":"110","endLine":28,"endColumn":18},{"ruleId":"107","severity":1,"message":"114","line":28,"column":20,"nodeType":"109","messageId":"110","endLine":28,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":72,"column":33,"nodeType":"117","messageId":"118","endLine":72,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":87,"column":26,"nodeType":"117","messageId":"118","endLine":87,"endColumn":28},{"ruleId":"107","severity":1,"message":"119","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":18},{"ruleId":"107","severity":1,"message":"120","line":21,"column":8,"nodeType":"109","messageId":"110","endLine":21,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":22,"column":10,"nodeType":"109","messageId":"110","endLine":22,"endColumn":16},{"ruleId":"107","severity":1,"message":"121","line":24,"column":10,"nodeType":"109","messageId":"110","endLine":24,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":24,"column":19,"nodeType":"109","messageId":"110","endLine":24,"endColumn":31},{"ruleId":"107","severity":1,"message":"123","line":24,"column":33,"nodeType":"109","messageId":"110","endLine":24,"endColumn":44},{"ruleId":"107","severity":1,"message":"124","line":127,"column":11,"nodeType":"109","messageId":"110","endLine":127,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":39,"column":36,"nodeType":"117","messageId":"118","endLine":39,"endColumn":38},{"ruleId":"115","severity":1,"message":"116","line":79,"column":26,"nodeType":"117","messageId":"118","endLine":79,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":92,"column":26,"nodeType":"117","messageId":"118","endLine":92,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":101,"column":26,"nodeType":"117","messageId":"118","endLine":101,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":110,"column":26,"nodeType":"117","messageId":"118","endLine":110,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":118,"column":26,"nodeType":"117","messageId":"118","endLine":118,"endColumn":28},{"ruleId":"107","severity":1,"message":"125","line":131,"column":15,"nodeType":"109","messageId":"110","endLine":131,"endColumn":22},{"ruleId":"107","severity":1,"message":"126","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":194,"column":34,"nodeType":"117","messageId":"118","endLine":194,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":197,"column":39,"nodeType":"117","messageId":"118","endLine":197,"endColumn":41},{"ruleId":"115","severity":1,"message":"116","line":208,"column":14,"nodeType":"117","messageId":"118","endLine":208,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":211,"column":19,"nodeType":"117","messageId":"118","endLine":211,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":6,"column":25,"nodeType":"109","messageId":"110","endLine":6,"endColumn":31},{"ruleId":"107","severity":1,"message":"127","line":6,"column":33,"nodeType":"109","messageId":"110","endLine":6,"endColumn":46},{"ruleId":"107","severity":1,"message":"112","line":26,"column":8,"nodeType":"109","messageId":"110","endLine":26,"endColumn":12},{"ruleId":"107","severity":1,"message":"128","line":28,"column":22,"nodeType":"109","messageId":"110","endLine":28,"endColumn":36},{"ruleId":"129","severity":1,"message":"130","line":178,"column":21,"nodeType":"131","endLine":179,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":6,"column":25,"nodeType":"109","messageId":"110","endLine":6,"endColumn":31},{"ruleId":"107","severity":1,"message":"112","line":26,"column":8,"nodeType":"109","messageId":"110","endLine":26,"endColumn":12},{"ruleId":"107","severity":1,"message":"132","line":29,"column":10,"nodeType":"109","messageId":"110","endLine":29,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":74,"column":33,"nodeType":"117","messageId":"118","endLine":74,"endColumn":35},{"ruleId":"115","severity":1,"message":"116","line":89,"column":26,"nodeType":"117","messageId":"118","endLine":89,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":185,"column":21,"nodeType":"131","endLine":195,"endColumn":23},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Column' is defined but never used.","'View' is defined but never used.","'startBot' is defined but never used.","'endBot' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'checkDM' is defined but never used.","'checkComment' is defined but never used.","'checkFollow' is defined but never used.","'token' is assigned a value but never used.","'columns' is assigned a value but never used.","'history' is defined but never used.","'MTableBodyRow' is defined but never used.","'updateIsMarked' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Height' is defined but never used.","no-global-assign","no-unsafe-negation"]