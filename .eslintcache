[{"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\reportWebVitals.js":"1","C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Navbar.js":"2","C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Lead.js":"3","C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Join.js":"4","C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\CommentInbox.js":"5","C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\api\\DashboardFunction.js":"6","C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Dashboard.js":"7"},{"size":375,"mtime":1613391439098,"results":"8","hashOfConfig":"9"},{"size":9517,"mtime":1624516632211,"results":"10","hashOfConfig":"9"},{"size":5675,"mtime":1622182591339,"results":"11","hashOfConfig":"9"},{"size":6108,"mtime":1618992505316,"results":"12","hashOfConfig":"9"},{"size":8911,"mtime":1624518846153,"results":"13","hashOfConfig":"9"},{"size":9101,"mtime":1624584351396,"results":"14","hashOfConfig":"9"},{"size":9218,"mtime":1624584126211,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11fqzy7",{"filePath":"18","messages":"19","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Navbar.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44"],"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Lead.js",["45","46","47","48","49"],"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Join.js",[],"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\CommentInbox.js",["50","51","52","53","54","55","56"],"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\api\\DashboardFunction.js",["57","58","59","60","61","62","63"],"C:\\Users\\Administrator\\Desktop\\twitter_automation_frontend\\src\\pages\\Dashboard.js",["64","65","66","67","68","69","70","71","72","73"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Button, DropdownButton,Dropdown } from 'react-bootstrap';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport './style.css'\r\n\r\nimport { startBot, endBot, getAllData, checkDM, checkComment, checkNotification, checkFollow, resetReport, resetAccount } from \"./../api/DashboardFunction\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {},\r\n            bot1_msg1: 'https://www.protectedtext.com/v2_msg1',\r\n            bot1_msg2: 'https://www.protectedtext.com/v2_msg2',\r\n            bot1_comment_msg: 'https://www.protectedtext.com/v_comment',\r\n            username_num: 200,\r\n            lead_type: \"peachly\",\r\n            bot1_successful_dm: 0,\r\n            bot1_unsuccessful_dm: 0,\r\n            bot1_spintax1_reply: 0,\r\n            bot2_successful_dm: 0,\r\n            bot2_unsuccessful_dm: 0,\r\n            bot2_spintax1_reply: 0,\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(\"real\",localStorage.token)\r\n        if (localStorage.token == undefined) {\r\n            window.location.href = \"/login\"\r\n        }\r\n        if( this.props.success === false ) {\r\n            this.props.getAllData();\r\n        }\r\n        console.log(this.props.data)\r\n        // try {\r\n        //     setInterval(async () => {\r\n        //       this.props.checkNotification();\r\n        //     }, 10000);\r\n        //   } catch(e) {\r\n        //     console.log(e);\r\n        //   }\r\n    }\r\n\r\n    handleDisplayMessage = (data) => {\r\n        console.log(\"HERE\", data)\r\n        this.props.history.push(`/message/${data.username}/${data.bot_number}/${data.profile}`)\r\n        // window.location.href = \"/message/\"+data.username\r\n    }\r\n\r\n    handleDisplayComment = (data) => {\r\n        console.log(\"comment\", data)\r\n        localStorage.setItem('previous_content', data.content);\r\n        localStorage.setItem('link', data.link)\r\n        this.props.history.push(`/comment/${data.account_username}/${data.to_username}/${data.bot_number}/${data.profile}`)\r\n    }\r\n\r\n    handleStartAutomation = () => {\r\n        console.log(\"bot_num\", this.props.bot_number)\r\n        const bot_info = {\r\n            bot_msg1: this.state.bot1_msg1,\r\n            bot_msg2: this.state.bot1_msg2,\r\n            bot_comment_msg: this.state.bot1_comment_msg,\r\n            username_num: this.state.username_num,\r\n            bot_number: this.props.bot_number,\r\n            lead_type: this.state.lead_type,\r\n            status: \"start\",\r\n        }\r\n        startBot(bot_info).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEndAutomation = () => {\r\n        console.log(\"End Auto\")\r\n        const info = {\r\n            status: \"end\",\r\n            bot_number: this.props.bot_number\r\n        }\r\n        endBot(info).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    handleResetReport = () => {\r\n        resetReport().then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    handleResetAccount = () => {\r\n        resetAccount().then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    handleCheckDM = () => {\r\n        console.log(\"check dm clicked\")\r\n        checkDM(this.props.bot_number).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    handleCheckFollow = () => {\r\n        console.log(\"check follow clicked\")\r\n        checkFollow(this.props.bot_number).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    handleCheckComment = () => {\r\n        checkComment(this.props.bot_number).then((res) => {\r\n            if (res.code == \"failed\") {\r\n                alert(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleLeadSelection = (data) => {\r\n        console.log(\"125\", data)\r\n        this.setState({lead_type: data})\r\n    }\r\n\r\n    onChange = (e) => {\r\n        console.log(\"I am changed!!!!!!!!!!\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(\"kkk\", this.state.msg1)\r\n    }\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            { title: \"Date\", field: \"date\" },\r\n            { title: \"Amount\", field: \"amount\" },\r\n            { title: \"Description\", field: \"description\" },\r\n            { title: \"Status\", field: \"status\" },\r\n            { title: \"Main Balance\", field: \"main_balance\" },\r\n        ];\r\n\r\n        const leadDropDown = [];\r\n        const lead = [\"peachly\", \"linda\"]\r\n        for (let i = 0; i < lead.length; i++) {\r\n            leadDropDown.push(<Dropdown.Item as=\"button\" onClick={ () => this.handleLeadSelection(lead[i]) }>{lead[i]}</Dropdown.Item>)\r\n        }\r\n\r\n        if ( this.props.success !== true ) {\r\n            return (\r\n                <div className=\"lds-grid\">\r\n                    <div style={{marginTop: \"100px\"}}><CircularProgress /></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        if( this.props.success === true ) {\r\n            return (\r\n                <div className=\"container\" style={{paddingTop:\"65px\", paddingLeft:\"20px\", paddingRight: \"20px\", color: \"black\"}}>\r\n                    <div className=\"control-div\">\r\n                        <Button variant=\"primary\" onClick = {this.handleStartAutomation}>Start Automation</Button>\r\n                        <Button variant=\"primary\" onClick = {this.handleEndAutomation}>End Automation</Button>\r\n                        <Button variant=\"primary\" onClick = {this.handleResetReport}>Reset Report</Button>\r\n                        <Button variant=\"primary\" onClick = {this.handleResetAccount}>Reset Account Report</Button>\r\n                        {/* <Button variant=\"primary\" disabled onClick = {this.handleCheckDM} >Check Coming DM</Button>\r\n                        <Button variant=\"primary\" disabled onClick = {this.handleCheckComment} >Check Comment Reply</Button>\r\n                        <Button variant=\"primary\" disabled onClick = {this.handleCheckFollow} >Check Follow Back</Button> */}\r\n                    </div>\r\n                    <div style={{marginTop:\"20px\"}}>\r\n                        <b><p>Number of the Leads: </p></b>\r\n                        <input\r\n                            type=\"number\"\r\n                            // max=\"500\"\r\n                            className=\"form-control\"\r\n                            id=\"username_num\"\r\n                            name=\"username_num\"\r\n                            value={this.state.username_num}\r\n                            onChange={this.onChange}\r\n                            style = {{width: \"30%\"}}\r\n                        />\r\n                    </div>\r\n                    {/* <div style={{marginTop:\"20px\"}}>\r\n                        <b><p>Leads Switching</p></b>\r\n                        <DropdownButton id=\"lead_selection\" title=\"Leads\">\r\n                            {leadDropDown}\r\n                        </DropdownButton>\r\n                    </div> */}\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 col-sm-4 spintaxTextArea\">\r\n                            <b><p>First Spintax:</p></b>\r\n                            <textarea onChange={this.onChange} style={{width:\"99%\"}} id=\"bot1_msg1\" name=\"bot1_msg1\" rows=\"2\" cols=\"50\" value={this.state.bot1_msg1} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4 spintaxTextArea\">\r\n                            <b><p>Second Spintax:</p></b>\r\n                            <textarea onChange={this.onChange} style={{width:\"99%\"}} id=\"bot1_msg2\" name=\"bot1_msg2\" rows=\"2\" cols=\"50\" value={this.state.bot1_msg2} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4 spintaxTextArea\">\r\n                            <b><p>Comment Spintax:</p></b>\r\n                            <textarea onChange={this.onChange} style={{width:\"99%\"}} id=\"bot1_comment_msg\" name=\"bot1_comment_msg\" rows=\"2\" cols=\"50\" value={this.state.bot1_comment_msg} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div >Coming Soon</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.error,\r\n    pending: state.pending,\r\n    success: state.success,\r\n    data: state.data,\r\n    report: state.data.report,\r\n    new_message: state.data.new_message,\r\n    reply_comment: state.data.reply_comment,\r\n    bot_number: state.bot\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getAllData,checkNotification\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)",{"ruleId":"74","severity":1,"message":"75","line":15,"column":8,"nodeType":"76","messageId":"77","endLine":15,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":18,"column":8,"nodeType":"76","messageId":"77","endLine":18,"endColumn":19},{"ruleId":"74","severity":1,"message":"79","line":22,"column":8,"nodeType":"76","messageId":"77","endLine":22,"endColumn":19},{"ruleId":"74","severity":1,"message":"80","line":25,"column":8,"nodeType":"76","messageId":"77","endLine":25,"endColumn":16},{"ruleId":"74","severity":1,"message":"81","line":26,"column":10,"nodeType":"76","messageId":"77","endLine":26,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":28,"column":10,"nodeType":"76","messageId":"77","endLine":28,"endColumn":17},{"ruleId":"74","severity":1,"message":"83","line":28,"column":19,"nodeType":"76","messageId":"77","endLine":28,"endColumn":31},{"ruleId":"74","severity":1,"message":"84","line":28,"column":33,"nodeType":"76","messageId":"77","endLine":28,"endColumn":44},{"ruleId":"74","severity":1,"message":"85","line":131,"column":11,"nodeType":"76","messageId":"77","endLine":131,"endColumn":16},{"ruleId":"74","severity":1,"message":"85","line":138,"column":13,"nodeType":"76","messageId":"77","endLine":138,"endColumn":18},{"ruleId":"74","severity":1,"message":"86","line":143,"column":14,"nodeType":"76","messageId":"77","endLine":143,"endColumn":26},{"ruleId":"74","severity":1,"message":"87","line":158,"column":14,"nodeType":"76","messageId":"77","endLine":158,"endColumn":22},{"ruleId":"88","severity":1,"message":"89","line":172,"column":20,"nodeType":"90","messageId":"91","endLine":172,"endColumn":22},{"ruleId":"88","severity":1,"message":"89","line":184,"column":13,"nodeType":"90","messageId":"91","endLine":184,"endColumn":15},{"ruleId":"74","severity":1,"message":"81","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":16},{"ruleId":"74","severity":1,"message":"92","line":6,"column":25,"nodeType":"76","messageId":"77","endLine":6,"endColumn":31},{"ruleId":"74","severity":1,"message":"93","line":6,"column":33,"nodeType":"76","messageId":"77","endLine":6,"endColumn":46},{"ruleId":"74","severity":1,"message":"94","line":28,"column":22,"nodeType":"76","messageId":"77","endLine":28,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":122,"column":21,"nodeType":"97","endLine":123,"endColumn":23},{"ruleId":"74","severity":1,"message":"92","line":5,"column":25,"nodeType":"76","messageId":"77","endLine":5,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":73,"column":33,"nodeType":"90","messageId":"91","endLine":73,"endColumn":35},{"ruleId":"88","severity":1,"message":"98","line":120,"column":27,"nodeType":"90","messageId":"91","endLine":120,"endColumn":29},{"ruleId":"88","severity":1,"message":"89","line":120,"column":65,"nodeType":"90","messageId":"91","endLine":120,"endColumn":67},{"ruleId":"88","severity":1,"message":"98","line":123,"column":32,"nodeType":"90","messageId":"91","endLine":123,"endColumn":34},{"ruleId":"88","severity":1,"message":"98","line":123,"column":70,"nodeType":"90","messageId":"91","endLine":123,"endColumn":72},{"ruleId":"95","severity":1,"message":"96","line":185,"column":21,"nodeType":"97","endLine":195,"endColumn":23},{"ruleId":"74","severity":1,"message":"99","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":15},{"ruleId":"88","severity":1,"message":"89","line":264,"column":34,"nodeType":"90","messageId":"91","endLine":264,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":267,"column":39,"nodeType":"90","messageId":"91","endLine":267,"endColumn":41},{"ruleId":"88","severity":1,"message":"89","line":278,"column":14,"nodeType":"90","messageId":"91","endLine":278,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":281,"column":19,"nodeType":"90","messageId":"91","endLine":281,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":303,"column":31,"nodeType":"90","messageId":"91","endLine":303,"endColumn":33},{"ruleId":"88","severity":1,"message":"89","line":326,"column":31,"nodeType":"90","messageId":"91","endLine":326,"endColumn":33},{"ruleId":"74","severity":1,"message":"100","line":5,"column":18,"nodeType":"76","messageId":"77","endLine":5,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":36,"column":32,"nodeType":"90","messageId":"91","endLine":36,"endColumn":34},{"ruleId":"88","severity":1,"message":"89","line":77,"column":26,"nodeType":"90","messageId":"91","endLine":77,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":90,"column":26,"nodeType":"90","messageId":"91","endLine":90,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":98,"column":26,"nodeType":"90","messageId":"91","endLine":98,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":106,"column":26,"nodeType":"90","messageId":"91","endLine":106,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":115,"column":26,"nodeType":"90","messageId":"91","endLine":115,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":124,"column":26,"nodeType":"90","messageId":"91","endLine":124,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":132,"column":26,"nodeType":"90","messageId":"91","endLine":132,"endColumn":28},{"ruleId":"74","severity":1,"message":"101","line":151,"column":15,"nodeType":"76","messageId":"77","endLine":151,"endColumn":22},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'CommentIcon' is defined but never used.","'StorageIcon' is defined but never used.","'MenuIcon' is defined but never used.","'Button' is defined but never used.","'checkDM' is defined but never used.","'checkComment' is defined but never used.","'checkFollow' is defined but never used.","'token' is assigned a value but never used.","'commentReply' is defined but never used.","'goToLead' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Column' is defined but never used.","'MTableBodyRow' is defined but never used.","'updateIsMarked' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Expected '!==' and instead saw '!='.","'history' is defined but never used.","'DropdownButton' is defined but never used.","'columns' is assigned a value but never used."]