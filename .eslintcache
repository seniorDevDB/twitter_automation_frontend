[{"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\index.js":"1","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Report.js":"2","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\history.js":"3","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Message.js":"4","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\DmInbox.js":"5","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\CommentInbox.js":"6","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Landing.js":"7","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Navbar.js":"8","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\App.js":"9","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\actions\\actions.js":"10","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Login.js":"11","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\DashboardFunction.js":"12","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\reducers\\index.js":"13","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\store.js":"14","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Dashboard.js":"15","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\TwitterAccount.js":"16","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Lead.js":"17"},{"size":624,"mtime":1611778182715,"results":"18","hashOfConfig":"19"},{"size":7954,"mtime":1622180011928,"results":"20","hashOfConfig":"19"},{"size":389,"mtime":1612472598739,"results":"21","hashOfConfig":"19"},{"size":5687,"mtime":1622098429839,"results":"22","hashOfConfig":"19"},{"size":9032,"mtime":1622179769775,"results":"23","hashOfConfig":"19"},{"size":9873,"mtime":1622179829088,"results":"24","hashOfConfig":"19"},{"size":1304,"mtime":1622095252385,"results":"25","hashOfConfig":"19"},{"size":9508,"mtime":1622095252394,"results":"26","hashOfConfig":"19"},{"size":2760,"mtime":1622095252348,"results":"27","hashOfConfig":"19"},{"size":2336,"mtime":1622178892068,"results":"28","hashOfConfig":"19"},{"size":5561,"mtime":1622095252386,"results":"29","hashOfConfig":"19"},{"size":8351,"mtime":1622178426671,"results":"30","hashOfConfig":"19"},{"size":3253,"mtime":1622177565310,"results":"31","hashOfConfig":"19"},{"size":656,"mtime":1622175516468,"results":"32","hashOfConfig":"19"},{"size":8594,"mtime":1622179877800,"results":"33","hashOfConfig":"19"},{"size":6193,"mtime":1622179954440,"results":"34","hashOfConfig":"19"},{"size":5675,"mtime":1622180036800,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bcdjj6",{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\index.js",[],["74","75"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Report.js",["76","77","78","79","80"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport MaterialTable, { Column, MTableBodyRow, TablePagination } from \"material-table\";\r\n\r\nimport './style.css'\r\n\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { getAllData, updateIsMarked} from \"./../api/DashboardFunction\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nclass CommentInbox extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hoveringOver: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      if( this.props.success === true ) return ;\r\n      this.props.getAllData();\r\n    }\r\n\r\n    downloadCSV(csv, filename) {\r\n        let csvFile;\r\n        let downloadLink;\r\n    \r\n        // CSV file\r\n        csvFile = new Blob([csv], {type: \"text/csv\"});\r\n    \r\n        // Download link\r\n        downloadLink = document.createElement(\"a\");\r\n    \r\n        // File name\r\n        downloadLink.download = filename;\r\n    \r\n        // Create a link to the file\r\n        downloadLink.href = window.URL.createObjectURL(csvFile);\r\n    \r\n        // Hide download link\r\n        downloadLink.style.display = \"none\";\r\n    \r\n        // Add the link to DOM\r\n        document.body.appendChild(downloadLink);\r\n    \r\n        // Click download link\r\n        downloadLink.click();\r\n    }\r\n\r\n    exportToCSV() {\r\n        let csv = [];\r\n        let titles = [\r\n            \"Bot Number\",\r\n            \"Number of Leads\",\r\n            \"Sent DM\",\r\n            \"Expired DM\",\r\n            \"Spintax1 Reply\",\r\n            \"Spintax2 Reply\",\r\n            \"Sent Comment\",\r\n            \"Expired Comment\",\r\n            \"Comment Reply\",\r\n            \"Follow\",\r\n            \"Follow Back\"\r\n        ];\r\n        csv.push(titles.join(\",\"));\r\n        for( let i = 0; i < this.props.report.length; i ++ ) {\r\n            let data = this.props.report[i];\r\n            let row = [data.bot_number, data.lead_number, data.sent_dm, data.expired_dm,data.spintax1_reply, data.spintax2_reply,data.comment, data.expired_comment,data.comment_reply, data.follow, data.follow_back];\r\n            csv.push(row.join(','));\r\n        }\r\n        this.downloadCSV(csv.join(\"\\n\"), \"report.csv\");\r\n    }\r\n\r\n    render() {\r\n        const report = this.props.report;\r\n        // this.exportToCSV();\r\n        if ( this.props.success !== true ) {\r\n          return (\r\n              <div className=\"lds-grid\">\r\n                  <div style={{marginTop: \"100px\"}}><CircularProgress /></div>\r\n              </div>\r\n          )\r\n        }\r\n\r\n        return(\r\n            <div className=\"table\">\r\n                <MaterialTable\r\n                components={{\r\n                    Pagination: props => {\r\n                      return (\r\n                        <td>\r\n                          <table\r\n                            style={{\r\n                              position: 'fixed',\r\n                              bottom: 0,\r\n                              left: 0,\r\n                              width: '100%',\r\n                            }}\r\n                          >\r\n                            <tbody>\r\n                              <tr>\r\n                                <TablePagination {...props} />\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        </td>\r\n                      );\r\n                    },\r\n                  }}\r\n                    icons={tableIcons}\r\n                    columns={[\r\n                        { title: \"Bot Number\", field: \"bot_number\", width: \"20%\" },\r\n                        { title: \"Number of Leads\", field: \"lead_number\", width: \"20%\" },\r\n                        { title: \"Sent DM\", field: \"sent_dm\"},\r\n                        { title: \"Expired DM\", field: \"expired_dm\"},\r\n                        { title: \"Spintax1 Reply\", field: \"spintax1_reply\"},\r\n                        // { title: \"Spintax2 Reply\", field: \"spintax2_reply\"},\r\n                        { title: \"Sent Comment\", field: \"sent_comment\"},\r\n                        { title: \"Expired Comment\", field: \"expired_comment\"},\r\n                        { title: \"Comment Reply\", field: \"comment_reply\" },\r\n                        { title: \"Follow\", field: \"follow\"},\r\n                        { title: \"Follow Back\", field: \"follow_back\"}\r\n                    ]}\r\n                    data={report}\r\n                    options={{\r\n                        pageSizeOptions: [10, 25, 50],\r\n                        pageSize: 10,\r\n                        headerStyle: {\r\n                          backgroundColor: \"#378FC3\",\r\n                          color: \"#FFF\",\r\n                          fontSize: \"17px\",\r\n                          fontWeight: \"bold\"\r\n                        },\r\n                        tableLayout: \"fixed\"\r\n                    }}\r\n                    actions={[\r\n                        {\r\n                          icon: tableIcons.Export,\r\n                          tooltip: \"Export To CSV\",\r\n                          isFreeAction: true,\r\n                          onClick: () => {\r\n                            this.exportToCSV();\r\n                          }\r\n                        }\r\n                      ]}\r\n                    components={{\r\n                    }}\r\n                    title=\"Report\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    success: state.success,\r\n    report: state.data.report,\r\n    bot_number: state.bot\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getAllData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(CommentInbox)","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\history.js",[],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Message.js",["81","82","83","84","85","86"],"import { keys } from \"@material-ui/core/styles/createBreakpoints\";\r\nimport React, { Component } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport dataReducer from \"../store/reducers\";\r\nimport { displayMsg, newMsg } from \"./../api/DashboardFunction\";\r\n\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\n\r\nclass Message extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            msg_content: \"\",\r\n            username: \"\",\r\n            bot_number: \"\",\r\n            profile: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const username = this.props.match.params.id;\r\n        const bot_number = this.props.match.params.num;\r\n        const profile = this.props.match.params.profile\r\n\r\n        this.setState({username: username, bot_number: bot_number, profile: profile})\r\n        const data = {\r\n            username: username,\r\n            bot_number: bot_number,\r\n            profile: profile\r\n        }\r\n        this.props.displayMsg(data);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        console.log(\"I am changed!!!!!!!!!!\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(\"kkk\", this.state.msg1)\r\n    }\r\n\r\n    sendMsg = () => {\r\n        console.log(\"send msg\", this.state.msg_content)\r\n        const data = {\r\n            username: this.state.username,\r\n            bot_number: this.state.bot_number,\r\n            profile: this.state.profile,\r\n            content: this.state.msg_content,\r\n            link: localStorage.getItem('dm_link'),\r\n        }\r\n        console.log(\"data\", data)\r\n        this.props.newMsg(data)\r\n        this.setState({msg_content: \"\"})\r\n        // .then((res) => {\r\n        //     if (res.code == \"failed\"){\r\n        //         alert(res.message)\r\n        //     }\r\n        //     else {\r\n        //         alert(\"dm sent\")\r\n        //         this.setState({msg_content: \"\"})\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        {\r\n            if ( this.props.msg_data == null || this.props.msg_data[0].username != this.state.username) {\r\n                return (\r\n                    <div className=\"lds-grid\">\r\n                        <div></div><div></div><div></div><div></div><div></div><div></div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        console.log(\"msg data\", this.props.msg_data)\r\n        const msgData = this.props.msg_data\r\n        console.log(\"mmm\", msgData)\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n            <div className=\"card\">\r\n            <div className=\"no-gutters\" style={{paddingTop:\"45px\"}}>\r\n                <div className=\"chat-container\">\r\n                    <ul className=\"chat-box chatContainerScroll\">\r\n                        {msgData && msgData.map((data, index) => (\r\n                            data.coming_time != '' ? (\r\n                                <li className=\"chat-left\" key={index}>\r\n                                    <div className=\"chat-avatar\">  \r\n                                        <AccountCircleIcon fontSize=\"large\"/>                   \r\n                                        <div className=\"chat-name\">{data.username}</div>\r\n                                    </div>\r\n                                    <div class=\"chat-text\">\r\n                                        {data.content}\r\n                                    </div>\r\n                                    <div class=\"chat-hour\">{data.coming_time}</div>\r\n                                </li>) : (\r\n                                <li className=\"chat-right\" key={index}>\r\n                                    {data.new_reply || data.new_reply == false ? (\r\n                                        <div className=\"chat-hour\">\"Sent\"</div>\r\n                                    ) : (<div className=\"chat-hour\">\"Pending\"</div>)}\r\n                                    <div className=\"chat-hour\">{ data.coming_time }</div>\r\n                                    <div className=\"chat-text\">\r\n                                    { data.content }\r\n                                    </div>\r\n                                    <div className=\"chat-avatar\">   \r\n                                        <AccountBoxIcon fontSize=\"large\"/>                            \r\n                                        <div className=\"chat-name\">{ data.username }</div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div>\r\n                          <div style={{marginTop:\"-10px\",display:\"flex\"}}>\r\n                                <textarea rows=\"3\" onChange={this.onChange} id=\"msg-content\" name= \"msg_content\" value={this.state.msg_content} placeholder=\"Type your message here...\"></textarea>\r\n                                <Button onClick={this.sendMsg} style={{marginTop:\"auto\",marginBottom: \"auto\", marginLeft:\"20px\", padding: '10px 30px', height: '100%'}}>Send</Button>\r\n                          </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    msg_status: state.msgData.code,\r\n    msg_data: state.msgData.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    displayMsg,\r\n    newMsg\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Message)","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\DmInbox.js",["87","88","89","90","91","92","93","94","95","96"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport MaterialTable, { Column, MTableBodyRow } from \"material-table\";\r\n\r\nimport './style.css'\r\n\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport View from \"@material-ui/icons/Visibility\";\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getAllData, updateIsMarkedDm, getDmData } from \"./../api/DashboardFunction\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nclass DmInbox extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hoveringOver: \"\"\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if( this.props.success === true ) return ;\r\n        // this.props.getDmData();\r\n        this.props.getAllData();\r\n    }\r\n\r\n    handleRowHover = (event, propsData) => {\r\n        this.setState({hoveringOver: propsData.index});\r\n    }\r\n\r\n    handleRowHoverLeave = (event, propsData) => {\r\n        this.setState({hoveringOver: \"\"});\r\n    }\r\n\r\n    isMarkAsRead = (row) => {\r\n        return row.mark_as_read == false;\r\n    }\r\n\r\n    handleDisplayMessage = (event, data) => {\r\n        console.log(\"I am dat!!\", data);\r\n        // udpate is marked\r\n        const info = {\r\n            account_username: data.account_username,\r\n            username: data.username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            coming_time: data.coming_time,\r\n            content: data.content\r\n        }\r\n        updateIsMarkedDm(info).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n        \r\n        //save the link into localstorage\r\n        localStorage.setItem('dm_link', data.link)\r\n        this.props.history.push(`/message/${data.username}/${data.bot_number}/${data.profile}`)\r\n    }\r\n\r\n    dateCompare = (firstDate, secondDate) => {\r\n        const date1 = new Date(firstDate);\r\n        const date2 = new Date(secondDate);\r\n\r\n        if (date1 > date2)\r\n            return -1;\r\n\r\n        if (date1 < date2)\r\n            return 1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n        if ( this.props.success !== true ) {\r\n            return (\r\n                <div className=\"lds-grid\">\r\n                    <div style={{marginTop: \"100px\"}}><CircularProgress /></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        console.log(\"her\", this.props.new_message)\r\n        const new_message = this.props.new_message;\r\n        const { hoveringOver } = this.state;\r\n        let filtered_message \r\n        if (new_message != undefined && this.props.bot_number == 0){\r\n            filtered_message = new_message\r\n        }\r\n        else if (new_message != undefined && this.props.bot_number != 0){\r\n            filtered_message= new_message.filter((item) => item.bot_number === this.props.bot_number)\r\n        }\r\n        \r\n        if (filtered_message) {\r\n            // filtered_message.sort((a,b) => this.dateCompare(a.save_time, b.save_time))\r\n\r\n\r\n            // for (var i = 0 ; i < filtered_message.length; i ++) {\r\n            //     const save_time = new Date(filtered_message[i].save_time);\r\n            //     console.log(\"I am tim!!!\", save_time);\r\n            //     filtered_message[i].save_time = save_time.toLocaleString('default', { month: 'short', day: 'numeric' })\r\n            // }\r\n\r\n            //show only last message from the same user\r\n            for (var i = 0 ; i < filtered_message.length -1; i ++) {\r\n                if (filtered_message[i].content.length >= 20){\r\n                    filtered_message[i].content = filtered_message[i].content.slice(0, 20) + \"...\"\r\n                }\r\n                if (filtered_message[i].username == filtered_message[i+1].username) {\r\n                    filtered_message.splice(i, 1)\r\n                    i = i-1\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        return(\r\n            <div className=\"table\">\r\n                <MaterialTable\r\n                    icons={tableIcons}\r\n                    columns={[\r\n                        { title: \"Username\", field: \"username\" },\r\n                        { title: \"Coming Message Time\", field: \"coming_time\"},\r\n                        { title: \"Message Content\", field: \"content\"},\r\n                        // { title: \"Save Time\", field: \"save_time\"},\r\n                        { title: \"Bot Number\", field: \"bot_number\"},\r\n                        { title: \"Browser Number\", field: \"profile\" },\r\n                    ]}\r\n                    data={filtered_message}\r\n                    options={{\r\n                        // paging: false,\r\n                        // toolbar: false,\r\n                        pageSizeOptions: [25, 50],\r\n                        pageSize: 25,\r\n                        headerStyle: {\r\n                          backgroundColor: \"#378FC3\",\r\n                          color: \"#FFF\",\r\n                          fontSize: \"17px\",\r\n                          fontWeight: \"bold\"\r\n                        },\r\n                        rowStyle: rowData => ({\r\n                            backgroundColor: this.isMarkAsRead(rowData) ? \"rgba(255,255,255,0.902)\" : \"rgba(242,245,245,0.8)\",\r\n                            fontWeight: this.isMarkAsRead(rowData) ? \"bold\" : \"\",\r\n                            boxShadow: rowData.tableData.id === hoveringOver ? '0px 2px 18px 0px rgba(0,0,0,0.5)' : ''\r\n                        }),\r\n                        tableLayout: \"fixed\"\r\n                    }}\r\n                    title=\"\"\r\n                    components={{\r\n                        Row: props => {\r\n                            return (\r\n                            <MTableBodyRow\r\n                                {...props}\r\n                                onMouseEnter={e => this.handleRowHover(e, props)}\r\n                                onMouseLeave={e => this.handleRowHoverLeave(e, props)}\r\n                            />\r\n                            );\r\n                        }\r\n                    }}\r\n                    onRowClick = {this.handleDisplayMessage}\r\n                    // actions={[\r\n                    //     {\r\n                    //     icon: View,\r\n                    //     tooltip: \"View\",\r\n                    //     onClick: (event, rowData) =>\r\n                    //         {this.handleDisplayComment(rowData)}\r\n                    //     }\r\n                    // ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    success: state.success,\r\n    new_message: state.data.new_message,\r\n    bot_number: state.bot\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getAllData,\r\n    getDmData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DmInbox)","F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\CommentInbox.js",["97","98","99","100","101","102","103","104","105"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Landing.js",[],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Navbar.js",["106","107","108","109","110","111","112","113","114","115"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\App.js",["116","117"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\actions\\actions.js",[],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Login.js",[],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\DashboardFunction.js",["118","119","120","121","122"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\reducers\\index.js",[],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\store.js",[],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Dashboard.js",["123","124","125","126","127","128","129","130"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\TwitterAccount.js",["131","132","133","134","135"],"F:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Lead.js",["136","137","138","139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":6,"column":25,"nodeType":"147","messageId":"148","endLine":6,"endColumn":31},{"ruleId":"145","severity":1,"message":"150","line":6,"column":33,"nodeType":"147","messageId":"148","endLine":6,"endColumn":46},{"ruleId":"145","severity":1,"message":"151","line":28,"column":22,"nodeType":"147","messageId":"148","endLine":28,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":186,"column":21,"nodeType":"154","endLine":187,"endColumn":23},{"ruleId":"145","severity":1,"message":"155","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":14},{"ruleId":"145","severity":1,"message":"156","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":67,"column":9,"nodeType":"159","messageId":"160","endLine":75,"endColumn":10},{"ruleId":"161","severity":1,"message":"162","line":68,"column":81,"nodeType":"163","messageId":"164","endLine":68,"endColumn":83},{"ruleId":"161","severity":1,"message":"162","line":86,"column":46,"nodeType":"163","messageId":"164","endLine":86,"endColumn":48},{"ruleId":"161","severity":1,"message":"165","line":98,"column":71,"nodeType":"163","messageId":"164","endLine":98,"endColumn":73},{"ruleId":"145","severity":1,"message":"146","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":6,"column":25,"nodeType":"147","messageId":"148","endLine":6,"endColumn":31},{"ruleId":"145","severity":1,"message":"166","line":26,"column":8,"nodeType":"147","messageId":"148","endLine":26,"endColumn":12},{"ruleId":"161","severity":1,"message":"165","line":75,"column":33,"nodeType":"163","messageId":"164","endLine":75,"endColumn":35},{"ruleId":"161","severity":1,"message":"165","line":90,"column":26,"nodeType":"163","messageId":"164","endLine":90,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":126,"column":25,"nodeType":"163","messageId":"164","endLine":126,"endColumn":27},{"ruleId":"161","severity":1,"message":"165","line":126,"column":63,"nodeType":"163","messageId":"164","endLine":126,"endColumn":65},{"ruleId":"161","severity":1,"message":"162","line":129,"column":30,"nodeType":"163","messageId":"164","endLine":129,"endColumn":32},{"ruleId":"161","severity":1,"message":"162","line":129,"column":68,"nodeType":"163","messageId":"164","endLine":129,"endColumn":70},{"ruleId":"161","severity":1,"message":"165","line":148,"column":50,"nodeType":"163","messageId":"164","endLine":148,"endColumn":52},{"ruleId":"145","severity":1,"message":"149","line":5,"column":25,"nodeType":"147","messageId":"148","endLine":5,"endColumn":31},{"ruleId":"161","severity":1,"message":"165","line":73,"column":33,"nodeType":"163","messageId":"164","endLine":73,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":88,"column":26,"nodeType":"163","messageId":"164","endLine":88,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":124,"column":27,"nodeType":"163","messageId":"164","endLine":124,"endColumn":29},{"ruleId":"161","severity":1,"message":"165","line":124,"column":65,"nodeType":"163","messageId":"164","endLine":124,"endColumn":67},{"ruleId":"161","severity":1,"message":"162","line":127,"column":32,"nodeType":"163","messageId":"164","endLine":127,"endColumn":34},{"ruleId":"161","severity":1,"message":"162","line":127,"column":70,"nodeType":"163","messageId":"164","endLine":127,"endColumn":72},{"ruleId":"161","severity":1,"message":"165","line":142,"column":53,"nodeType":"163","messageId":"164","endLine":142,"endColumn":55},{"ruleId":"152","severity":1,"message":"153","line":206,"column":21,"nodeType":"154","endLine":216,"endColumn":23},{"ruleId":"145","severity":1,"message":"167","line":15,"column":8,"nodeType":"147","messageId":"148","endLine":15,"endColumn":18},{"ruleId":"145","severity":1,"message":"168","line":25,"column":8,"nodeType":"147","messageId":"148","endLine":25,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":26,"column":10,"nodeType":"147","messageId":"148","endLine":26,"endColumn":16},{"ruleId":"145","severity":1,"message":"169","line":28,"column":10,"nodeType":"147","messageId":"148","endLine":28,"endColumn":17},{"ruleId":"145","severity":1,"message":"170","line":28,"column":19,"nodeType":"147","messageId":"148","endLine":28,"endColumn":31},{"ruleId":"145","severity":1,"message":"171","line":28,"column":33,"nodeType":"147","messageId":"148","endLine":28,"endColumn":44},{"ruleId":"145","severity":1,"message":"172","line":131,"column":11,"nodeType":"147","messageId":"148","endLine":131,"endColumn":16},{"ruleId":"145","severity":1,"message":"172","line":138,"column":13,"nodeType":"147","messageId":"148","endLine":138,"endColumn":18},{"ruleId":"161","severity":1,"message":"165","line":172,"column":20,"nodeType":"163","messageId":"164","endLine":172,"endColumn":22},{"ruleId":"161","severity":1,"message":"165","line":184,"column":13,"nodeType":"163","messageId":"164","endLine":184,"endColumn":15},{"ruleId":"145","severity":1,"message":"173","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"174","line":2,"column":42,"nodeType":"147","messageId":"148","endLine":2,"endColumn":50},{"ruleId":"145","severity":1,"message":"175","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":15},{"ruleId":"161","severity":1,"message":"165","line":237,"column":34,"nodeType":"163","messageId":"164","endLine":237,"endColumn":36},{"ruleId":"161","severity":1,"message":"165","line":240,"column":39,"nodeType":"163","messageId":"164","endLine":240,"endColumn":41},{"ruleId":"161","severity":1,"message":"165","line":251,"column":14,"nodeType":"163","messageId":"164","endLine":251,"endColumn":16},{"ruleId":"161","severity":1,"message":"165","line":254,"column":19,"nodeType":"163","messageId":"164","endLine":254,"endColumn":21},{"ruleId":"145","severity":1,"message":"176","line":5,"column":18,"nodeType":"147","messageId":"148","endLine":5,"endColumn":32},{"ruleId":"161","severity":1,"message":"165","line":36,"column":32,"nodeType":"163","messageId":"164","endLine":36,"endColumn":34},{"ruleId":"161","severity":1,"message":"165","line":77,"column":26,"nodeType":"163","messageId":"164","endLine":77,"endColumn":28},{"ruleId":"161","severity":1,"message":"165","line":90,"column":26,"nodeType":"163","messageId":"164","endLine":90,"endColumn":28},{"ruleId":"161","severity":1,"message":"165","line":99,"column":26,"nodeType":"163","messageId":"164","endLine":99,"endColumn":28},{"ruleId":"161","severity":1,"message":"165","line":108,"column":26,"nodeType":"163","messageId":"164","endLine":108,"endColumn":28},{"ruleId":"161","severity":1,"message":"165","line":116,"column":26,"nodeType":"163","messageId":"164","endLine":116,"endColumn":28},{"ruleId":"145","severity":1,"message":"177","line":135,"column":15,"nodeType":"147","messageId":"148","endLine":135,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":6,"column":25,"nodeType":"147","messageId":"148","endLine":6,"endColumn":31},{"ruleId":"145","severity":1,"message":"150","line":6,"column":33,"nodeType":"147","messageId":"148","endLine":6,"endColumn":46},{"ruleId":"145","severity":1,"message":"151","line":28,"column":22,"nodeType":"147","messageId":"148","endLine":28,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":130,"column":21,"nodeType":"154","endLine":131,"endColumn":23},{"ruleId":"145","severity":1,"message":"146","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"145","severity":1,"message":"149","line":6,"column":25,"nodeType":"147","messageId":"148","endLine":6,"endColumn":31},{"ruleId":"145","severity":1,"message":"150","line":6,"column":33,"nodeType":"147","messageId":"148","endLine":6,"endColumn":46},{"ruleId":"145","severity":1,"message":"151","line":28,"column":22,"nodeType":"147","messageId":"148","endLine":28,"endColumn":36},{"ruleId":"152","severity":1,"message":"153","line":122,"column":21,"nodeType":"154","endLine":123,"endColumn":23},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Column' is defined but never used.","'MTableBodyRow' is defined but never used.","'updateIsMarked' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'keys' is defined but never used.","'dataReducer' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'View' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'checkDM' is defined but never used.","'checkComment' is defined but never used.","'checkFollow' is defined but never used.","'token' is assigned a value but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'history' is defined but never used.","'DropdownButton' is defined but never used.","'columns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]