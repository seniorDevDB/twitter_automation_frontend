[{"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\App.js":"1","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\store.js":"2","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\reducers\\index.js":"3","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\reportWebVitals.js":"4","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Dashboard.js":"5","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\index.js":"6","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\DashboardFunction.js":"7","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\actions\\actions.js":"8","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Message.js":"9","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\history.js":"10","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Comment.js":"11"},{"size":713,"mtime":1613045199577,"results":"12","hashOfConfig":"13"},{"size":516,"mtime":1612450048191,"results":"14","hashOfConfig":"13"},{"size":1154,"mtime":1612997473825,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1611772396998,"results":"16","hashOfConfig":"13"},{"size":16498,"mtime":1612990882683,"results":"17","hashOfConfig":"13"},{"size":624,"mtime":1611778182715,"results":"18","hashOfConfig":"13"},{"size":4031,"mtime":1613341019263,"results":"19","hashOfConfig":"13"},{"size":860,"mtime":1612997411173,"results":"20","hashOfConfig":"13"},{"size":4340,"mtime":1613045566169,"results":"21","hashOfConfig":"13"},{"size":389,"mtime":1612472598739,"results":"22","hashOfConfig":"13"},{"size":5297,"mtime":1613341375807,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12rukaq",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\App.js",["49","50"],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\store.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\reducers\\index.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\reportWebVitals.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Dashboard.js",["51","52","53","54","55","56"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport MaterialTable, { Column } from \"material-table\";\r\n\r\nimport './style.css'\r\n\r\nimport { forwardRef } from 'react';\r\n \r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport View from \"@material-ui/icons/Visibility\";\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { startBot, endBot, getAllData, checkDM } from \"./../api/DashboardFunction\";\r\nimport { PhoneEnabledOutlined } from \"@material-ui/icons\";\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: {},\r\n            bot1_msg1: 'https://docs.google.com/document/d/1ilCkha_pnrK_ojEIr_kwvahLAZzrjuZw4h0IYj4NmjM/edit',\r\n            bot1_msg2: 'https://docs.google.com/document/d/1vEhe8gYOuHdkAJY5IHnSfT5pnH3ksVQCkXeL4y6L5Jk/edit?usp=sharing',\r\n            bot1_comment_msg: 'https://docs.google.com/document/d/1vEhe8gYOuHdkAJY5IHnSfT5pnH3ksVQCkXeL4y6L5Jk/edit?usp=sharing',\r\n            bot2_msg1: 'https://docs.google.com/document/d/1ilCkha_pnrK_ojEIr_kwvahLAZzrjuZw4h0IYj4NmjM/edit',\r\n            bot2_msg2: 'https://docs.google.com/document/d/1vEhe8gYOuHdkAJY5IHnSfT5pnH3ksVQCkXeL4y6L5Jk/edit?usp=sharing',\r\n            bot2_comment_msg: 'https://docs.google.com/document/d/1vEhe8gYOuHdkAJY5IHnSfT5pnH3ksVQCkXeL4y6L5Jk/edit?usp=sharing',\r\n            bot3_msg1: 'https://docs.google.com/document/d/1ilCkha_pnrK_ojEIr_kwvahLAZzrjuZw4h0IYj4NmjM/edit',\r\n            bot3_msg2: 'https://docs.google.com/document/d/1vEhe8gYOuHdkAJY5IHnSfT5pnH3ksVQCkXeL4y6L5Jk/edit?usp=sharing',\r\n            bot3_comment_msg: 'https://docs.google.com/document/d/1vEhe8gYOuHdkAJY5IHnSfT5pnH3ksVQCkXeL4y6L5Jk/edit?usp=sharing',\r\n            username_num: 100,\r\n            bot1_successful_dm: 0,\r\n            bot1_unsuccessful_dm: 0,\r\n            bot1_spintax1_reply: 0,\r\n            bot2_successful_dm: 0,\r\n            bot2_unsuccessful_dm: 0,\r\n            bot2_spintax1_reply: 0\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if( this.props.success === false ) {\r\n            this.props.getAllData();\r\n        }\r\n        console.log(\"SSSSSSSSSSSSSSSSS\")\r\n        console.log(this.props.data)\r\n    }\r\n\r\n    handleDisplayMessage = (data) => {\r\n        console.log(\"HERE\", data)\r\n        this.props.history.push(`/message/${data.username}/${data.bot_number}/${data.profile}`)\r\n        // window.location.href = \"/message/\"+data.username\r\n    }\r\n\r\n    handleDisplayComment = (data) => {\r\n        console.log(\"comment\", data)\r\n        this.props.history.push(`/comment/${data.account_username}/${data.to_username}/${data.bot_number}/${data.profile}`)\r\n    }\r\n\r\n    handleStartAutomation = () => {\r\n        console.log(\"start Auto\")\r\n        const bot_info = {\r\n            bot1_msg1: this.state.bot1_msg1,\r\n            bot1_msg2: this.state.bot1_msg2,\r\n            bot1_comment_msg: this.state.bot1_comment_msg,\r\n            bot2_msg1: this.state.bot2_msg1,\r\n            bot2_msg2: this.state.bot2_msg2,\r\n            bot2_comment_msg: this.state.bot2_comment_msg,\r\n            bot3_msg1: this.state.bot3_msg1,\r\n            bot3_msg2: this.state.bot3_msg2,\r\n            bot3_comment_msg: this.state.bot3_comment_msg,\r\n            username_num: this.state.username_num,\r\n            status: \"start\"\r\n        }\r\n        startBot(bot_info).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleEndAutomation = () => {\r\n        console.log(\"End Auto\")\r\n        const info = {\r\n            status: \"end\"\r\n        }\r\n        endBot(info).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    handleCheckDM = () => {\r\n        console.log(\"check dm clicked\")\r\n        checkDM().then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            } \r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        console.log(\"I am changed!!!!!!!!!!\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(\"kkk\", this.state.msg1)\r\n    }\r\n\r\n    render() {\r\n        const columns = [\r\n            { title: \"Date\", field: \"date\" },\r\n            { title: \"Amount\", field: \"amount\" },\r\n            { title: \"Description\", field: \"description\" },\r\n            { title: \"Status\", field: \"status\" },\r\n            { title: \"Main Balance\", field: \"main_balance\" },\r\n        ];\r\n        console.log(this.props.data.report)\r\n        console.log(\"nnn\", this.props.reply_comment)\r\n        if( this.props.success === true ) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"control-div\">\r\n                        <Button variant=\"primary\" onClick = {this.handleStartAutomation}>Start Automation</Button>\r\n                        <Button variant=\"primary\" onClick = {this.handleEndAutomation}>End Automation</Button>\r\n                        <Button variant=\"primary\" onClick = {this.handleCheckDM}>Check Coming DM</Button>\r\n                    </div>\r\n                    <div>\r\n                        <label>Number of the Usernames</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            id=\"username_num\"\r\n                            name=\"username_num\"\r\n                            value={this.state.username_num}\r\n                        />\r\n                    </div>\r\n                    <div className=\"report-div row\">\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3>Bot1</h3>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Successful DMS:</p> <b><p>{this.props.report.bot1_successful_dm}</p></b>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Unsuccessful DMS:</p> <b><p>{this.props.report.bot1_unsuccessful_dm}</p></b>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Spintax Message 1 Replies:</p> <b><p>{this.props.report.bot1_spintax1_reply}</p></b>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3>Bot2</h3>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Successful DMS:</p> <b><p>{this.props.report.bot2_successful_dm}</p></b>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Unsuccessful DMS:</p> <b><p>{this.props.report.bot2_unsuccessful_dm}</p></b>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Spintax Message 1 Replies:</p> <b><p>{this.props.report.bot2_spintax1_reply}</p></b>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3>Bot3</h3>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Successful DMS:</p> <b><p>{this.props.report.bot2_successful_dm}</p></b>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Unsuccessful DMS:</p> <b><p>{this.props.report.bot2_unsuccessful_dm}</p></b>\r\n                            </div>\r\n                            <div style={{display: \"flex\"}}>\r\n                                <p>Spintax Message 1 Replies:</p> <b><p>{this.props.report.bot2_spintax1_reply}</p></b>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot1: First Spintax:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot1_msg1\" name=\"bot1_msg1\" rows=\"3\" cols=\"50\" value={this.state.bot1_msg1} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot1: Second Spintax:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot1_msg2\" name=\"bot1_msg2\" rows=\"3\" cols=\"50\" value={this.state.bot1_msg2} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot1: Comment:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot1_comment_msg\" name=\"bot1_comment_msg\" rows=\"3\" cols=\"50\" value={this.state.bot1_comment_msg} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot2: First Spintax:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot2_msg1\" name=\"bot2_msg1\" rows=\"3\" cols=\"50\" value={this.state.bot2_msg1} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot2: Second Spintax:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot2_msg2\" name=\"bot2_msg2\" rows=\"3\" cols=\"50\" value={this.state.bot2_msg2} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot2: Comment:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot2_comment_msg\" name=\"bot2_comment_msg\" rows=\"3\" cols=\"50\" value={this.state.bot2_comment_msg} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot3: First Spintax:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot3_msg1\" name=\"bot3_msg1\" rows=\"3\" cols=\"50\" value={this.state.bot3_msg1} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot3: Second Spintax:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot3_msg2\" name=\"bot3_msg2\" rows=\"3\" cols=\"50\" value={this.state.bot3_msg2} />\r\n                        </div>\r\n                        <div className=\"col-md-4 col-sm-4\">\r\n                            <h3 htmlFor=\"\">Bot3: Comment:</h3>\r\n                            <textarea onChange={this.onChange} id=\"bot3_comment_msg\" name=\"bot3_comment_msg\" rows=\"3\" cols=\"50\" value={this.state.bot3_comment_msg} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"table\">\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            columns={[\r\n                                { title: \"ID\", field: \"_id\" },\r\n                                { title: \"Username\", field: \"username\" },\r\n                                { title: \"Coming Message Time\", field: \"coming_time\"},\r\n                                { title: \"Message Content\", field: \"content\"},\r\n                                { title: \"Save Time\", field: \"save_time\"},\r\n                                { title: \"Bot Number\", field: \"bot_number\"},\r\n                                { title: \"Browser Number\", field: \"profile\" }\r\n                            ]}\r\n                            data={this.props.new_message}\r\n                            title=\"Coming DM Table\"\r\n                            actions={[\r\n                                {\r\n                                icon: View,\r\n                                tooltip: \"View\",\r\n                                onClick: (event, rowData) =>\r\n                                    {this.handleDisplayMessage(rowData)}\r\n                                }\r\n                            ]}\r\n                            options={{actionsColumnIndex: -1}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"table\">\r\n                        <MaterialTable\r\n                            icons={tableIcons}\r\n                            columns={[\r\n                                { title: \"ID\", field: \"_id\" },\r\n                                { title: \"Username\", field: \"to_username\" },\r\n                                { title: \"Account Username\", field: \"account_username\"},\r\n                                { title: \"Coming Time\", field: \"coming_time\" },\r\n                                { title: \"Message Content\", field: \"content\"},\r\n                                { title: \"Save Time\", field: \"save_time\"},\r\n                                { title: \"Bot Number\", field: \"bot_number\"},\r\n                                { title: \"Browser Number\", field: \"profile\" }\r\n                            ]}\r\n                            data={this.props.reply_comment}\r\n                            title=\"Comment History Table\"\r\n                            actions={[\r\n                                {\r\n                                icon: View,\r\n                                tooltip: \"View\",\r\n                                onClick: (event, rowData) =>\r\n                                    {this.handleDisplayComment(rowData)}\r\n                                }\r\n                            ]}\r\n                            options={{actionsColumnIndex: -1}}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div >Coming Soon</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.error,\r\n    pending: state.pending,\r\n    success: state.success,\r\n    data: state.data,\r\n    report: state.data.report,\r\n    new_message: state.data.new_message,\r\n    reply_comment: state.data.reply_comment,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getAllData,\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard)","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\index.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\api\\DashboardFunction.js",["57"],"import axios from \"axios\";\r\nimport { fetchDataFailed, fetchDataPending, fetchDataSuccess, fetchMessageData, fetchCommentData } from \"./../store/actions/actions\";\r\nimport history from \"./../history\"\r\nconst axiosInstance = axios.create({baseURL: \"http://localhost:5000\"})\r\n\r\nexport function getAllData() {\r\n    return dispatch => {\r\n        dispatch(fetchDataPending());\r\n        axiosInstance.post(\"/fetch_all_data\").then(res => {\r\n            console.log(\"here is data\", res)\r\n            dispatch(fetchDataSuccess(res.data));\r\n        }).catch(err => {\r\n            console.error(err);\r\n            dispatch(fetchDataFailed());\r\n        })\r\n    }\r\n}\r\n\r\nexport const startBot = (data) => {\r\n    console.log(\"start bot\")\r\n    return axiosInstance\r\n        .post(\"/start_bot\", {\r\n            bot1_msg1: data.bot1_msg1,\r\n            bot1_msg2: data.bot1_msg2,\r\n            bot1_comment_msg: data.bot1_comment_msg,\r\n            bot2_msg1: data.bot2_msg1,\r\n            bot2_msg2: data.bot2_msg2,\r\n            bot2_comment_msg: data.bot2_comment_msg,\r\n            bot3_msg1: data.bot3_msg1,\r\n            bot3_msg2: data.bot3_msg2,\r\n            bot3_comment_msg: data.bot3_comment_msg,\r\n            username_num: data.username_num,\r\n            status: data.status\r\n        })\r\n        .then((res) => {\r\n            console.log(\"DATA FROM BACK\", res.data);\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const endBot = (data) => {\r\n    console.log(\"end bot\")\r\n    return axiosInstance\r\n        .post(\"/end_bot\", {\r\n            status: data.status\r\n        })\r\n        .then((res) => {\r\n            console.log(\"DATA FROM BACK\", res.data);\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const checkDM = () => {\r\n    return axiosInstance\r\n        .post(\"/check_dm\", {\r\n\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nexport const displayComment = (data) => {\r\n    console.log(\"here is display comment fucntion\")\r\n    return dispatch => {\r\n        axiosInstance\r\n        .post(\"/display_comment\", {\r\n            username: data.username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n            account_name: data.account_name\r\n        })\r\n        .then((res) => {\r\n            console.log(\"RESPONSE\", res.data)\r\n            dispatch(fetchCommentData(res.data));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n}\r\n\r\nexport const newComment = (data) => {\r\n    return axiosInstance\r\n        .post(\"/new_comment\", {\r\n            content: data.content,\r\n            username: data.username,\r\n            account_name: data.account_name,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n\r\nexport const displayMsg = (data) => {\r\n    console.log(\"here is display masg fucntion\")\r\n    return dispatch => {\r\n        axiosInstance\r\n        .post(\"/display_msg\", {\r\n            username: data\r\n        })\r\n        .then((res) => {\r\n            console.log(\"RESPONSE\", res.data)\r\n            dispatch(fetchMessageData(res.data));\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        });\r\n    }\r\n}\r\n\r\nexport const newMsg = (data) => {\r\n    return axiosInstance\r\n        .post(\"/new_msg\", {\r\n            content: data.content,\r\n            username: data.username,\r\n            bot_number: data.bot_number,\r\n            profile: data.profile,\r\n        })\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            return res.data;\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\store\\actions\\actions.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Message.js",["58","59","60","61"],"import { keys } from \"@material-ui/core/styles/createBreakpoints\";\r\nimport React, { Component } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport dataReducer from \"../store/reducers\";\r\nimport { displayMsg, newMsg } from \"./../api/DashboardFunction\";\r\n\r\nclass Message extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            msg_content: \"\",\r\n            username: \"\",\r\n            bot_number: \"\",\r\n            profile: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const username = this.props.match.params.id;\r\n        const bot_number = this.props.match.params.num;\r\n        const profile = this.props.match.params.profile\r\n        console.log(\"here is compoent\", username, bot_number, profile)\r\n        this.setState({username: username, bot_number: bot_number, profile: profile})\r\n        this.props.displayMsg(username);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        console.log(\"I am changed!!!!!!!!!!\", e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value });\r\n        console.log(\"kkk\", this.state.msg1)\r\n    }\r\n\r\n    sendMsg = () => {\r\n        console.log(\"send msg\", this.state.msg_content)\r\n        const data = {\r\n            username: this.state.username,\r\n            bot_number: this.state.bot_number,\r\n            profile: this.state.profile,\r\n            content: this.state.msg_content\r\n        }\r\n        console.log(\"data\", data)\r\n        newMsg(data).then((res) => {\r\n            if (res.code == \"failed\"){\r\n                alert(res.message)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"msg data\", this.props.msg_data)\r\n        const msgData = this.props.msg_data\r\n        console.log(\"mmm\", msgData)\r\n        return (\r\n            <div className=\"content-wrapper\">\r\n            <div className=\"card\">\r\n            <div className=\"no-gutters\">\r\n                <div className=\"chat-container\">\r\n                    <ul className=\"chat-box chatContainerScroll\">\r\n                        {msgData && msgData.map((data, index) => (\r\n                            data.coming_time != '' ? (\r\n                                <li className=\"chat-left\" key={index}>\r\n                                    <div className=\"chat-avatar\">                     \r\n                                        <div className=\"chat-name\">\"{data.username}\"</div>\r\n                                    </div>\r\n                                    <div class=\"chat-text\">\r\n                                        \"{data.content}\"\r\n                                    </div>\r\n                                    <div class=\"chat-hour\">\"{data.coming_time}\"</div>\r\n                                </li>) : (\r\n                                <li className=\"chat-right\" key={index}>\r\n                                    <div className=\"chat-hour\">\"{ data.coming_time }\"</div>\r\n                                    <div className=\"chat-text\">\r\n                                    \"{ data.content }\"\r\n                                    </div>\r\n                                    <div className=\"chat-avatar\">                         \r\n                                        <div className=\"chat-name\">\"{ data.username }\"</div>\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <div>\r\n                          <div style={{display:\"flex\"}}>\r\n                                <textarea rows=\"3\" onChange={this.onChange} id=\"msg-content\" name= \"msg_content\" value={this.state.msg_content} placeholder=\"Type your message here...\"></textarea>\r\n                                <Button onClick={this.sendMsg} style={{marginLeft:\"20px\"}}>Send</Button>\r\n                          </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    msg_status: state.msgData.code,\r\n    msg_data: state.msgData.message\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    displayMsg\r\n}, dispatch);\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Message)","E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\history.js",[],"E:\\my projects\\bot david\\project\\frontend\\twitter_bot_frontend\\src\\pages\\Comment.js",["62","63","64","65"],{"ruleId":"66","severity":1,"message":"67","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":2,"column":42,"nodeType":"68","messageId":"69","endLine":2,"endColumn":50},{"ruleId":"66","severity":1,"message":"71","line":6,"column":25,"nodeType":"68","messageId":"69","endLine":6,"endColumn":31},{"ruleId":"66","severity":1,"message":"72","line":29,"column":10,"nodeType":"68","messageId":"69","endLine":29,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":112,"column":26,"nodeType":"75","messageId":"76","endLine":112,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":124,"column":26,"nodeType":"75","messageId":"76","endLine":124,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":133,"column":26,"nodeType":"75","messageId":"76","endLine":133,"endColumn":28},{"ruleId":"66","severity":1,"message":"77","line":146,"column":15,"nodeType":"68","messageId":"69","endLine":146,"endColumn":22},{"ruleId":"66","severity":1,"message":"78","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":15},{"ruleId":"66","severity":1,"message":"79","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":14},{"ruleId":"66","severity":1,"message":"80","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":45,"column":26,"nodeType":"75","messageId":"76","endLine":45,"endColumn":28},{"ruleId":"73","severity":1,"message":"81","line":62,"column":46,"nodeType":"75","messageId":"76","endLine":62,"endColumn":48},{"ruleId":"66","severity":1,"message":"79","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":14},{"ruleId":"66","severity":1,"message":"80","line":6,"column":8,"nodeType":"68","messageId":"69","endLine":6,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":55,"column":26,"nodeType":"75","messageId":"76","endLine":55,"endColumn":28},{"ruleId":"73","severity":1,"message":"81","line":72,"column":46,"nodeType":"75","messageId":"76","endLine":72,"endColumn":48},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Column' is defined but never used.","'PhoneEnabledOutlined' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'columns' is assigned a value but never used.","'history' is defined but never used.","'keys' is defined but never used.","'dataReducer' is defined but never used.","Expected '!==' and instead saw '!='."]